#summary HOWTO: Building snowflake
#labels Featured

= Introduction =

This is a short run-down on how to build snowflake.

Something to be aware of: build system is completely untested on anything but linux. If you're building on something else, you will get no where if you don't have a gcc/binutils toolchain capable of targeting i386-elf. You've been warned!

= Details =

Some pre-requisite software:
  * ocaml compiler tools, preferrably 3.10.x, 3.11.x untested
  * findlib
  * time
  * mkisofs
  * a C toolchain targeting i386-elf

Once all that is installed, it should be as simple as typing make from the root of the project source.

= Mac OS X =

Okies, there's a patch to make snowflake build on non-ELF hosts now.

First off, you need to build an i386-elf cross compiler. Instructions can be found at http://m3os.wordpress.com/2009/03/29/tutorial-building-an-i386-elf-cross-compiler-and-binutils-on-os-x/.

Once you have your cross compiler, the steps look roughly like:
  # cd tools && make ocaml bitstring
  # patch -Np0 -i building-on-osx.patch
  # PATH=/path/to/i386-elf-toolchain/bin:$PATH make

If all goes well, you should have a snowflake.native which is the kernel. If everything goes really well, you should also have a snowflake.iso to boot!

= Unsupported =

Building snowflake is currently not really supported on mac os x or windows. It might work on BSD flavours. I'm not sure if it's possible to use a cross compiler, since parts need to be compiled for the host system, and other parts for i386-elf.

If you really get stuck, and are on an unsupported host operating system, I'd recommend setting up a virtual machine.

If you have tips and/or like to submit a patch to be able to configure the build system with specific host and target toolchains to use, that'd be awesome.