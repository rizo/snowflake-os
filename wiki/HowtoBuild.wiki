#summary HOWTO: Building snowflake
#labels Featured

= Introduction =

This is a short run-down on how to build snowflake.

Something to be aware of: build system is completely untested on anything but linux. If you're building on something else, you will get no where if you don't have a gcc/binutils toolchain capable of targeting i386-elf. You've been warned!

= Details =

Some pre-requisite software:
  * ocaml compiler tools, preferrably 3.10.x, 3.11.x untested
  * mkisofs
  * a C toolchain targeting i386-elf
Once all that is installed, it should be as simple as typing make from the root of the project source.

= Mac OS X =

Okies, I've been nice and made the build system able to cope with non-ELF hosts.

First off, you need to build an i386-elf cross compiler. Instructions can be found at http://m3os.wordpress.com/2009/03/29/tutorial-building-an-i386-elf-cross-compiler-and-binutils-on-os-x/. You need to ensure that it creates binaries with a prefix of i386-elf.

Once you have your cross compiler, the steps look roughly like:
  # `export TOOLSPREFIX=/path/to/your/cross-compiler/bin`
  # `make prep-osx`
  # `make`

For example, if you have the directory *`/usr/local/i386elf/bin`* which contains the following programs: `i386-elf-gcc`, `i386-elf-as`, and friends, then you would export *`TOOLSPREFIX=/usr/local/i386elf/bin`*. It will append "i386-elf-gcc", "i386-elf-as", and friends to `TOOLSPREFIX` and use these for building snowflake.

If all goes well, you should have a snowflake.native which is the kernel. If everything goes really well, you should also have a snowflake.iso to boot!

[http://www.wilcox-tech.com/opensource/snowflake-vbox-osx.png]

Small lil note from the OS X guy, here.  You need mkisofs to make that ISO, and for that you need to compile [ftp://ftp.berlios.de/pub/cdrecord/alpha/cdrtools-beta.tar.gz CDRecord and friends].  It's really easy, just get the tarball, and type "make && sudo make install".  Note that whomever wrote the CDRecord Makefile told it to install to /opt/schily, so you either need to do
 * {{{PATH=/path/to/i386-elf-toolchain/bin:/opt/schily:$PATH make}}}

Or optionally you can do what I did and do:
 * {{{sudo mv /opt/schily/bin/* /usr/bin/}}}

== Snow Leopard ==
Another lil note from the Mac dude.  Snow Leopard and it's 64-bit-ness is pure evil from a Snowflake-building perspective.  I had to major-hack the ocaml code, build cdrtools three different times (each time for a different library/component), and get a zombie-spaghetti-mess of 32-bit and 64-bit binaries.  It isn't pretty at all.  If you really really *really really* want to build on Snow Leopard, open an issue and I might be able to tar up my Snowflake folder.  I can't provide instructions though.  Trust me, you wouldn't want them anyway.

Compiling now works on Snow Leopard without any extra special steps.

= Unsupported =

Pretty much anything non-UNIX-like that you can't get an i386-elf cross-compiler working on (if required), or can't run ocamlopt toolchain.

Basically, I use Debian with ocaml-3.10. I've had confirmation it also works on OS X (10.5), also with ocaml-3.10. If you're trying with later versions of ocaml on your machine, and it doesn't work, then that currently falls under unsupported too.

If you're stuck, and really desperate to get it working, use a virtual machine. Works for me on my EeePC.